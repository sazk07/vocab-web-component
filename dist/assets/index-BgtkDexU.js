(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&o(s)}).observe(document,{childList:!0,subtree:!0});function n(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(t){if(t.ep)return;t.ep=!0;const r=n(t);fetch(t.href,r)}})();class h extends HTMLElement{constructor(){super()}connectedCallback(){try{const e=this.attachShadow({mode:"open"}),n=document.querySelector("template");if(!n)throw new Error("vocab template not found");const o=document.createElement("link");if(!o)throw new Error("shadow link element could not be created");o.setAttribute("rel","stylesheet"),o.setAttribute("href","css/shadowstyle.css"),e.appendChild(o),e.appendChild(n.content.cloneNode(!0))}catch(e){console.error(e.message)}}}customElements.define("vocab-element",h);const y=async c=>{try{const e=await fetch(c);if(!e.ok)throw new Error(e.statusText);const n=await e.json();if(!n)throw new Error("no data found");return n}catch(e){return console.error(e.message),e}},b=(c,e,n)=>{const o=document.createElement("span");o.setAttribute("slot",c),o.textContent=e,n.appendChild(o)},m=(c,e,n)=>{const o=document.createElement("li");o.setAttribute("slot",c),o.innerHTML=e,n.appendChild(o)},w=async()=>{const c=document.querySelector("main")??document.createElement("main"),e=await y("data/data.json");if(e instanceof Error){c.textContent=e.message;return}for(const n of e){const{word:o,definition:t,mark:r,etym:s}=n,i=document.createElement("vocab-element");c.appendChild(i),b("vocab",o,i);const f=Array.isArray(t)?t:[t];for(const a of f)m("definition",a,i);if(r){const a=Array.isArray(r)?r:[r];a==null||a.forEach((u,l)=>{const d=Array.isArray(s)?s[l]:s,p=`<mark>${u}</mark>: <span>${d}</span>`;m("etym",p,i)})}i.addEventListener("click",a=>{const u=document.querySelectorAll("vocab-element");for(const l of u)if(l!==a.currentTarget){const d=l.shadowRoot.querySelector("details");if(!l.shadowRoot){console.error("vocab shadow root not found");return}if(!d){console.error("details not found");return}d.open&&d.removeAttribute("open")}})}};w();
